@model CrsSoftBlogProject.Models.ViewModels.AddBlogPostViewModel
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager

<link rel="stylesheet" runat="server" media="screen" href="~/css/CssFiles/AddButton.min.css" />

@*<script src="~/js/Scripts/BlogPosts/AddBlogPost.js" asp-append-version="true"></script>
*@
@if (signInManager.IsSignedIn(User))
{
    <div class="container">
        <form asp-controller="BlogPost" id="createPost" asp-action="CreatePost" method="post" class="needs-validation" novalidate autocomplete="off">
            @Html.AntiForgeryToken()
            <div class="py-2">
                <div class="container">
                    <h1>CreateBlog Post - Admin Functionality</h1>
                </div>
            </div>

            <div class="mb-3">
                <label class="mb-2" for="PageTitle">Page Title</label>
                <input id="pageTitle" type="text" name="PageTitle" asp-for="PageTitle" required autofocus>
                <span class="text-danger" asp-validation-for="PageTitle"></span>
            </div>

            <div class="mb-3">
                <label class="mb-2" for="PageContent">Page Content</label>
                <textarea id="PageContent" class="form-control" name="PageContent" asp-for="PageContent" placeholder="Write something.." style="height:200px" required autofocus></textarea>
                <span class="text-danger" asp-validation-for="PageContent"></span>

            </div>

            <div class="mb-3">
                <label class="mb-2" for="Description">Description</label>
                <input id="description" type="text" class="form-control" name="Description" asp-for="Description" required autofocus>
                <span class="text-danger" asp-validation-for="Description"></span>

            </div>

            <div class="mb-3">
                <label class="mb-2" for="Author">Author</label>
                <input id="author" type="text" class="form-control" name="Author" asp-for="Author" value="@User.Identity.Name" required autofocus readonly>
                <span class="text-danger" asp-validation-for="Author"></span>

            </div>

            <div class="mb-3">
                <label class="form-label">Featured Image Upload</label>
                <input type="file" id="featuredImageUpload" class="form-control" />

                <img src="" id="featuredImageDisplay" style="margin-top:1rem; display:none;width: 300px;" />
            </div>

            <div class="mb-3">
                <label class="form-label">Featured Image URL</label>
                <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl" />
            </div>

            <div class="mb-3">
                <label class="mb-2">Tags</label>
                <select class="form-select" aria-label="Default select example" name="SelectedTag" asp-for="SelectedTag" required>
                    <option value="">Select Tag</option>
                    @foreach (var tag in Model.Tags)
                    {
                        <option value="@tag.DisplayName">@tag.DisplayName</option>
                    }
                </select>
                <span class="text-danger" asp-validation-for="SelectedTag"></span>
            </div>

            <div class="mb-3">
                <label class="mb-2">Categories</label>
                <select name="CategoriesName" asp-for="CategoriesName" required>
                    <option value="">Select Category</option>
                    @if (Model != null && Model.Categories != null)
                    {
                        foreach (var category in Model.Categories)
                        {
                            <option value="@category.CategoriesName">@category.CategoriesName</option>
                        }
                    }
                </select>
                <span class="text-danger" asp-validation-for="CategoriesName"></span>
            </div>

            <div class="text-center">
                <input class="text-center" type="submit" value="Submit">
            </div>
        </form>
        <div class="container py-2">
            <div id="successMessage" class="alert alert-success" style="display: none;">
                Blog post successfully created!
            </div>
        </div>
    </div>

} else
{
    <div class="py-2 text-center ">
        <div class="container">
            <h1>Bu sayfaya erişiminiz yok</h1>
        </div>
    </div>
}



<script>
    $(document).ready(function () {
        $("#createPost").submit(function (e) {
            e.preventDefault();

            var data = {
                PageTitle: $("#pageTitle").val(),
                PageContent: $("#PageContent").val(),
                Description: $("#description").val(),
                Author: $("#author").val(),
                FeaturedImageUrl: $("#featuredImageUrl").val(),
                SelectedTag: $("#SelectedTag").val(),
                CategoriesName: $("#CategoriesName").val(),
                FeaturedImageUpload: $("#featuredImageUpload").val(),
            };

            $.ajax({
                url: '@Url.Action("CreatePost", "BlogPost")',
                type: 'POST',
                data: data,
                success: function (result) {
                    $("#successMessage").fadeIn().delay(2000).fadeOut();
                    $("#pageTitle").val('');
                    $("#PageContent").val('');
                    $("#description").val('');
                    $("#featuredImageUrl").val('');
                    $("#SelectedTag").val('');
                    $("#CategoriesName").val('');
                    $("#featuredImageUpload").val();


                },
                error: function (xhr, status, error) {
                    alert("An error occurred while creating the blog post.");
                }

            });
        });

    });
</script>

@section Scripts {
    <script>
        var editor = new FroalaEditor('#PageContent', {
            imageUploadURL: '/api/images'
        });


        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');


        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Aceept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result.link;
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }


        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
}